#!/bin/bash
# Munin plugin for measure quality of your http service
# See README and README.rus files for details

#        **"THE COFFEEWARE LICENSE"**
# Denis Klimov wrote this code. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think 
# this stuff is worth it, you can buy me a coffee in return. 
#
# Also, you might consider following me on Twitter (@zver_denis) for any comments and/or 
# questions you might have and if you'd like you can send me a donation 
# at any time to support my work, ask me how!

SLUG=`basename $0|sed -e 's/http_quality_//g'`
if [ "$SLUG" == "http_quality" ]; then
	SLUG=
	FILE_SUFFIX=
	TITLE_SUFFIX=
else
	FILE_SUFFIX="_$SLUG"
	TITLE_SUFFIX=" ($SLUG)"
fi

[ -z $QUALITY_LOG ] && QUALITY_LOG=/var/log/quality${FILE_SUFFIX}.log

SNAP_LOG=${QUALITY_LOG}.snap
LAST_VALUE_FILE=/run/http_quality${FILE_SUFFIX}.last

if [ "$1" == "config" ]; then
	echo "
multigraph http_request_time$FILE_SUFFIX
graph_title NGINX avg request time$TITLE_SUFFIX
graph_args --base 1000 -l 0
graph_vlabel s
graph_category http

AVG_REQUEST_TIME.label average time
AVG_REQUEST_TIME.type GAUGE
AVG_REQUEST_TIME.info Average time for requests
AVG_REQUEST_TIME.min 0
AVG_REQUEST_TIME.draw LINE1
AVG_REQUEST_TIME.colour COLOUR1

MIN_REQUEST_TIME.label min time
MIN_REQUEST_TIME.type GAUGE
MIN_REQUEST_TIME.info Average time for requests
MIN_REQUEST_TIME.min 0
MIN_REQUEST_TIME.draw LINE1
MIN_REQUEST_TIME.colour COLOUR0

MAX_REQUEST_TIME.label min time
MAX_REQUEST_TIME.type GAUGE
MAX_REQUEST_TIME.info Average time for requests
MAX_REQUEST_TIME.min 0
MAX_REQUEST_TIME.draw LINE1
MAX_REQUEST_TIME.colour COLOUR8

multigraph http_request_codes$FILE_SUFFIX
graph_args --base 1000 -l 0
graph_vlabel Count per 5 minutes
graph_title NGINX request codes$TITLE_SUFFIX
graph_category http

code5xx.label 5xx
code5xx.draw AREA
code5xx.colour 000000

code4xx.label 4xx
code4xx.draw STACK
code4xx.colour COLOUR9

code3xx.label 3xx
code3xx.draw STACK
code3xx.colour COLOUR1

code2xx.label 2xx
code2xx.draw STACK
code2xx.colour COLOUR6
"
	exit 0
fi

cat $QUALITY_LOG > $SNAP_LOG
cat /dev/null > $QUALITY_LOG

awk -v FILE_SUFFIX="$FILE_SUFFIX" -v max=0 '

NR == 1 { min = $1 }
NR > 1 && $1 < min { min = $1 }

max < $1 { max = $1 }

{ s = s + $1; }

/ 5/ { c5 = c5 + 1 }
/ 4/ { c4 = c4 + 1 }
/ 3/ { c3 = c3 + 1 }
/ 2/ { c2 = c2 + 1 }

END {
printf "multigraph http_request_time%s", FILE_SUFFIX;
printf "AVG_REQUEST_TIME.value %s", s/FNR;
printf "MIN_REQUEST_TIME.value %s", min;
printf "MAX_REQUEST_TIME.value %s", max;

printf "multigraph http_request_codes%s", FILE_SUFFIX;
printf "code5xx.value %s", 100*c5/FNR;
printf "code4xx.value %s", 100*c4/FNR;
printf "code3xx.value %s", 100*c3/FNR;
printf "code2xx.value %s", 100*c2/FNR;
}

' $SNAP_LOG | tee $LAST_VALUE_FILE

rm -f $SNAP_LOG

exit 0

